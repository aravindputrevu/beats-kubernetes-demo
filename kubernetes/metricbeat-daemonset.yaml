---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-config
  namespace: kube-system
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
data:
  metricbeat.yml: |-
    metricbeat.modules:
      - module: system
        period: 10s
        metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
        processes: ['.*']
        process.include_top_n:
          by_cpu: 5      # include top 5 processes by CPU
          by_memory: 5   # include top 5 processes by memory

      - module: system
        period: 1m
        metricsets:
          - filesystem
          - fsstat
        processors:
        - drop_event.when.regexp:
            system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'

      - module: docker
        metricsets:
          - container
          - cpu
          - diskio
          - healthcheck
          - info
          - memory
          - network
        hosts: ["unix:///var/run/docker.sock"]
        period: 10s

      - module: kubernetes
        period: 10s
        metricsets:
          - node
          - system
          - pod
          - container
          - volume
        hosts: ["localhost:10255"]

    metricbeat.autodiscover:
      providers:
        - type: kubernetes
          host: ${HOSTNAME}
          templates:
            - condition.contains:
                kubernetes.container.name: mysql
              config:
                - module: mysql
                  period: 10s
                  metricsets: ["status"]
                  hosts: ["tcp(${data.host}:3306)/"]
                  username: root
                  password: ${MYSQL_ROOT_PASSWORD}

            - condition.contains:
                kubernetes.container.name: nginx
              config:
                - module: nginx
                  period: 10s
                  metricsets: ["stubstatus"]
                  hosts: ["${data.host}:8080"]

            - condition.contains:
                kubernetes.container.name: kube-state-metrics
              config:
                - module: kubernetes
                  period: 10s
                  metricsets:
                    - state_node
                    - state_deployment
                    - state_replicaset
                    - state_pod
                    - state_container
                  hosts: ["${data.host}:8080"]

    processors:
      - add_cloud_metadata:

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}

    setup.kibana:
      host: ${KIBANA_HOST}
      username: ${ELASTIC_USERNAME}
      password: ${ELASTIC_PASSWORD}
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: metricbeat
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: metricbeat
      hostNetwork: true
      containers:
      - name: metricbeat
        image: docker.elastic.co/beats/metricbeat:6.2.0
        imagePullPolicy: Always
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "-system.hostfs=/hostfs",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTICSEARCH_HOST
        - name: ELASTICSEARCH_PORT
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTICSEARCH_PORT
        - name: KIBANA_HOST
          valueFrom:
            secretKeyRef:
              name: elastic
              key: KIBANA_HOST
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTIC_USERNAME
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTIC_PASSWORD
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic
              key: MYSQL_ROOT_PASSWORD
        securityContext:
          runAsUser: 0
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: dockersock
          mountPath: /var/run/docker.sock
        - name: proc
          mountPath: /hostfs/proc
          readOnly: true
        - name: cgroup
          mountPath: /hostfs/sys/fs/cgroup
          readOnly: true
      volumes:
      - name: proc
        hostPath:
          path: /proc
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          defaultMode: 0600
          name: metricbeat-config
      - name: data
        emptyDir: {}
---
# Run metricbeat setup
apiVersion: batch/v1
kind: Job
metadata:
  name: metricbeat-setup
  namespace: kube-system
spec:
  activeDeadlineSeconds: 300
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: metricbeat-setup
        imagePullPolicy: Always
        image: docker.elastic.co/beats/metricbeat:6.2.0
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
          "setup",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTICSEARCH_HOST
        - name: ELASTICSEARCH_PORT
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTICSEARCH_PORT
        - name: KIBANA_HOST
          valueFrom:
            secretKeyRef:
              name: elastic
              key: KIBANA_HOST
        - name: ELASTIC_USERNAME
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTIC_USERNAME
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elastic
              key: ELASTIC_PASSWORD
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: dockersock
          mountPath: /var/run/docker.sock
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      - name: config
        configMap:
          defaultMode: 0600
          name: metricbeat-config
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
- kind: ServiceAccount
  name: metricbeat
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - events
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
---
